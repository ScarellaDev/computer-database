<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="com.excilys.computerdatabase.persistence" />
	<context:component-scan base-package="com.excilys.computerdatabase.service" />
	<context:component-scan base-package="com.excilys.computerdatabase.validator" />
	
	<!-- Declares support for general annotations such as @Required, @Autowired, @PostConstruct -->
	<context:annotation-config />
	
	<bean id="propertiesConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="searchSystemEnvironment" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations">
			<list>
				<!-- properties loaded from src/main/resources folder during dev -->
				<value>classpath:*.properties</value>
				<!-- if the JVM is being ran with a specific var such as -Dapp.conf.dir=//opt/some/dir -->
				<!-- its properties files will override the previous ones -->
				<value>file:/${app.config.dir}/*.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${DB_DRIVER}"></property>
		<property name="url" value="${DB_URL}"></property>
		<property name="username" value="${DB_USERNAME}"></property>
		<property name="password" value="${DB_PASSWORD}"></property>
	</bean>
	
	<!-- Declares support for @Transactional annotation -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
	
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>